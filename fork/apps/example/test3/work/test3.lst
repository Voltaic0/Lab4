 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 307
    4                      ; Text size: 4408
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  41747465	.ascii "Attempting to trigger segfault (%d): test3\n\000"
   85  00003038  6d707469	
   85  0000303c  6e672074	
   85  00003040  6f207472	
   85  00003044  69676765	
   85  00003048  72207365	
   85  0000304c  67666175	
   85  00003050  6c742028	
   85  00003054  2564293a	
   85  00003058  20746573	
   85  0000305c  74330a00	
   86  00003060          	.align 2
   87  00003060          	LC2_LF0:
   88  00003060  74657374	.ascii "test2 (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   88  00003064  32202825	
   88  00003068  64293a20	
   88  0000306c  42616420	
   88  00003070  73656d61	
   88  00003074  70686f72	
   88  00003078  6520735f	
   88  0000307c  70726f63	
   88  00003080  735f636f	
   88  00003084  6d706c65	
   88  00003088  74656420	
   88  0000308c  28256429	
   88  00003090  210a00  	
   89  00003093          	.align 2
   90  00003094          	LC3_LF0:
   91  00003094  41747465	.ascii "Attempting to trigger page fault: %d (program should print error from "
   91  00003098  6d707469	
   91  0000309c  6e672074	
   91  000030a0  6f207472	
   91  000030a4  69676765	
   91  000030a8  72207061	
   91  000030ac  67652066	
   91  000030b0  61756c74	
   91  000030b4  3a202564	
   91  000030b8  20287072	
   91  000030bc  6f677261	
   91  000030c0  6d207368	
   91  000030c4  6f756c64	
   91  000030c8  20707269	
   91  000030cc  6e742065	
   91  000030d0  72726f72	
   91  000030d4  2066726f	
   91  000030d8  6d20    	
   92  000030da  4d656d6f	.ascii "MemoryPageFaultHandler in memory.c!)\n\000"
   92  000030de  72795061	
   92  000030e2  67654661	
   92  000030e6  756c7448	
   92  000030ea  616e646c	
   92  000030ee  65722069	
   92  000030f2  6e206d65	
   92  000030f6  6d6f7279	
   92  000030fa  2e632129	
   92  000030fe  0a00    	
   93  00003100          	.align 2
   94  00003100          	LC4_LF0:
   95  00003100  41636365	.ascii "Accessing the value...\n %d!\n\000"
   95  00003104  7373696e	
   95  00003108  67207468	
   95  0000310c  65207661	
   95  00003110  6c75652e	
   95  00003114  2e2e0a20	
   95  00003118  2564210a	
   95  0000311c  00      	
   96  0000311d          	.align 2
   97  00003120          	LC5_LF0:
   98  00003120  74657374	.ascii "test2 (%d): Done!\n\000"
   98  00003124  32202825	
   98  00003128  64293a20	
   98  0000312c  446f6e65	
   98  00003130  210a00  	
   99  00003133          	.text
  100  000010d4          	.align 2
  101  000010d4          	.proc _main
  102  000010d4          	.global _main
  103  000010d4          	_main:
  104                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  105  000010d4  afbefffc	sw	-4(r29),r30; push fp
  106  000010d8  001df020	add	r30,r0,r29; fp = sp
  107  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  108  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  109  000010e4  8fc20000	lw	r2,(r30)
  110  000010e8  8fc30004	lw	r3,4(r30)
  111  000010ec  0c001040	jal	___main
  112  000010f0  54000000	nop; not filled.
  113  000010f4  64410002	snei	r1,r2,#2
  114  000010f8  10200028	beqz	r1,L17_LF0
  115  000010fc  54000000	nop; not filled.
  116  00001100  23bdfff8	addi	r29,r29,#-8
  117  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  118  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  119  0000110c  afa40000	sw	(r29),r4
  120  00001110  0c00015c	jal	_Printf
  121  00001114  54000000	nop; not filled.
  122  00001118  0c00025c	jal	_Exit
  123  0000111c  54000000	nop; not filled.
  124  00001120  23bd0008	addi	r29,r29,#8
  125  00001124          	L17_LF0:
  126  00001124  23bdfff0	addi	r29,r29,#-16
  127  00001128  8c630004	lw	r3,4(r3)
  128  0000112c  afa30000	sw	(r29),r3
  129  00001130  20040000	addi	r4,r0,#0
  130  00001134  afa40004	sw	4(r29),r4
  131  00001138  2004000a	addi	r4,r0,#10
  132  0000113c  afa40008	sw	8(r29),r4
  133  00001140  0c000af0	jal	_dstrtol
  134  00001144  54000000	nop; not filled.
  135  00001148  00011020	add	r2,r0,r1
  136  0000114c  3c03000f	lhi	r3,#15
  137  00001150  2463effc	addui	r3,r3,#61436
  138  00001154  0c000124	jal	_getpid
  139  00001158  54000000	nop; not filled.
  140  0000115c  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  141  00001160  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  142  00001164  afa40000	sw	(r29),r4
  143  00001168  afa10004	sw	4(r29),r1
  144  0000116c  0c000100	jal	_Printf
  145  00001170  54000000	nop; not filled.
  146  00001174  afa20000	sw	(r29),r2
  147  00001178  0c000148	jal	_sem_signal
  148  0000117c  54000000	nop; not filled.
  149  00001180  23bd0010	addi	r29,r29,#16
  150  00001184  64210001	snei	r1,r1,#1
  151  00001188  10200038	beqz	r1,L18_LF0
  152  0000118c  54000000	nop; not filled.
  153  00001190  0c0000e8	jal	_getpid
  154  00001194  54000000	nop; not filled.
  155  00001198  23bdfff0	addi	r29,r29,#-16
  156  0000119c  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  157  000011a0  24843060	addui	r4,r4,(LC2_LF0)&0xffff
  158  000011a4  afa40000	sw	(r29),r4
  159  000011a8  afa10004	sw	4(r29),r1
  160  000011ac  afa20008	sw	8(r29),r2
  161  000011b0  0c0000bc	jal	_Printf
  162  000011b4  54000000	nop; not filled.
  163  000011b8  0c0001bc	jal	_Exit
  164  000011bc  54000000	nop; not filled.
  165  000011c0  23bd0010	addi	r29,r29,#16
  166  000011c4          	L18_LF0:
  167  000011c4  23bdfff8	addi	r29,r29,#-8
  168  000011c8  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  169  000011cc  24843094	addui	r4,r4,(LC3_LF0)&0xffff
  170  000011d0  afa40000	sw	(r29),r4
  171  000011d4  afa30004	sw	4(r29),r3
  172  000011d8  0c000094	jal	_Printf
  173  000011dc  54000000	nop; not filled.
  174  000011e0  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  175  000011e4  24843100	addui	r4,r4,(LC4_LF0)&0xffff
  176  000011e8  afa40000	sw	(r29),r4
  177  000011ec  8c610000	lw	r1,(r3)
  178  000011f0  afa10004	sw	4(r29),r1
  179  000011f4  0c000078	jal	_Printf
  180  000011f8  54000000	nop; not filled.
  181  000011fc  0c00007c	jal	_getpid
  182  00001200  54000000	nop; not filled.
  183  00001204  3c040000	lhi	r4,((LC5_LF0)>>16)&0xffff
  184  00001208  24843120	addui	r4,r4,(LC5_LF0)&0xffff
  185  0000120c  afa40000	sw	(r29),r4
  186  00001210  afa10004	sw	4(r29),r1
  187  00001214  0c000058	jal	_Printf
  188  00001218  54000000	nop; not filled.
  189  0000121c  23bd0008	addi	r29,r29,#8
  190  00001220  0c000f00	jal	_exit
  191  00001224  54000000	nop
  192  00001228          	.endproc _main
  193                      ;;;
  194                      ;;; Stub functions for DLX traps.
  195                      ;;;
  196                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  197                      ;;;
  198                      ;;; The traps such as Open and Close
  199                      ;;; (note the capital letters) are for use by user programs.  The traps
  200                      ;;; with names such as open and close (lower case) are for use by the OS.
  201                      ;;;
  204  00001228          	.align 2
  206                      ;;; The following are the traps to be used by user-level programs
  207                      ;;;
  209  00001228          	.align 2
  210  00001228          	.proc _Open
  211  00001228          	.global _Open
  212  00001228          	_Open:
  213                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  214                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  215                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  216  00001228  44000213	trap	#0x213
  217  0000122c  4be00000	jr	r31
  218  00001230  54000000	nop
  219  00001234          	.endproc _Open
  221  00001234          	.proc _Close
  222  00001234          	.global _Close
  223  00001234          	_Close:
  224  00001234  44000214	trap	#0x214
  225  00001238  4be00000	jr	r31
  226  0000123c  54000000	nop
  227  00001240          	.endproc _Close
  229  00001240          	.proc _Read
  230  00001240          	.global _Read
  231  00001240          	_Read:
  232  00001240  44000210	trap	#0x210
  233  00001244  4be00000	jr	r31
  234  00001248  54000000	nop
  235  0000124c          	.endproc _Read
  237  0000124c          	.proc _Write
  238  0000124c          	.global _Write
  239  0000124c          	_Write:
  240  0000124c  44000211	trap	#0x211
  241  00001250  4be00000	jr	r31
  242  00001254  54000000	nop
  243  00001258          	.endproc _Write
  245  00001258          	.proc _Lseek
  246  00001258          	.global _Lseek
  247  00001258          	_Lseek:
  248  00001258  44000212	trap	#0x212
  249  0000125c  4be00000	jr	r31
  250  00001260  54000000	nop
  251  00001264          	.endproc _Lseek
  253  00001264          	.proc _Putchar
  254  00001264          	.global _Putchar
  255  00001264          	_Putchar:
  256  00001264  44000280	trap	#0x280
  257  00001268  4be00000	jr	r31
  258  0000126c  54000000	nop
  259  00001270          	.endproc _Putchar
  261  00001270          	.proc _Printf
  262  00001270          	.global _Printf
  263  00001270          	_Printf:
  264  00001270  44000201	trap	#0x201
  265  00001274  4be00000	jr	r31
  266  00001278  54000000	nop
  267  0000127c          	.endproc _Printf
  269  0000127c          	.proc _getpid
  270  0000127c          	.global _getpid
  271  0000127c          	_getpid:
  272  0000127c  44000431	trap	#0x431
  273  00001280  4be00000	jr	r31
  274  00001284  54000000	nop
  275  00001288          	.endproc _getpid
  277  00001288          	.proc _process_create
  278  00001288          	.global _process_create
  279  00001288          	_process_create:
  280  00001288  44000432	trap	#0x432
  281  0000128c  4be00000	jr	r31
  282  00001290  54000000	nop
  283  00001294          	.endproc _process_create
  285  00001294          	.proc _shmget
  286  00001294          	.global _shmget
  287  00001294          	_shmget:
  288  00001294  44000440	trap	#0x440
  289  00001298  4be00000	jr	r31
  290  0000129c  54000000	nop
  291  000012a0          	.endproc _shmget
  293  000012a0          	.proc _shmat
  294  000012a0          	.global _shmat
  295  000012a0          	_shmat:
  296  000012a0  44000441	trap	#0x441
  297  000012a4  4be00000	jr	r31
  298  000012a8  54000000	nop
  299  000012ac          	.endproc _shmat
  301  000012ac          	.proc _sem_create
  302  000012ac          	.global _sem_create
  303  000012ac          	_sem_create:
  304  000012ac  44000450	trap	#0x450
  305  000012b0  4be00000	jr	r31
  306  000012b4  54000000	nop
  307  000012b8          	.endproc _sem_create
  309  000012b8          	.proc _sem_wait
  310  000012b8          	.global _sem_wait
  311  000012b8          	_sem_wait:
  312  000012b8  44000451	trap	#0x451
  313  000012bc  4be00000	jr	r31
  314  000012c0  54000000	nop
  315  000012c4          	.endproc _sem_wait
  317  000012c4          	.proc _sem_signal
  318  000012c4          	.global _sem_signal
  319  000012c4          	_sem_signal:
  320  000012c4  44000452	trap	#0x452
  321  000012c8  4be00000	jr	r31
  322  000012cc  54000000	nop
  323  000012d0          	.endproc _sem_signal
  325  000012d0          	.proc _lock_create
  326  000012d0          	.global _lock_create
  327  000012d0          	_lock_create:
  328  000012d0  44000453	trap	#0x453
  329  000012d4  4be00000	jr	r31
  330  000012d8  54000000	nop
  331  000012dc          	.endproc _lock_create
  333  000012dc          	.proc _lock_acquire
  334  000012dc          	.global _lock_acquire
  335  000012dc          	_lock_acquire:
  336  000012dc  44000454	trap	#0x454
  337  000012e0  4be00000	jr	r31
  338  000012e4  54000000	nop
  339  000012e8          	.endproc _lock_acquire
  341  000012e8          	.proc _lock_release
  342  000012e8          	.global _lock_release
  343  000012e8          	_lock_release:
  344  000012e8  44000455	trap	#0x455
  345  000012ec  4be00000	jr	r31
  346  000012f0  54000000	nop
  347  000012f4          	.endproc _lock_release
  349  000012f4          	.proc _cond_create
  350  000012f4          	.global _cond_create
  351  000012f4          	_cond_create:
  352  000012f4  44000456	trap	#0x456
  353  000012f8  4be00000	jr	r31
  354  000012fc  54000000	nop
  355  00001300          	.endproc _cond_create
  357  00001300          	.proc _cond_wait
  358  00001300          	.global _cond_wait
  359  00001300          	_cond_wait:
  360  00001300  44000457	trap	#0x457
  361  00001304  4be00000	jr	r31
  362  00001308  54000000	nop
  363  0000130c          	.endproc _cond_wait
  365  0000130c          	.proc _cond_signal
  366  0000130c          	.global _cond_signal
  367  0000130c          	_cond_signal:
  368  0000130c  44000458	trap	#0x458
  369  00001310  4be00000	jr	r31
  370  00001314  54000000	nop
  371  00001318          	.endproc _cond_signal
  373  00001318          	.proc _cond_broadcast
  374  00001318          	.global _cond_broadcast
  375  00001318          	_cond_broadcast:
  376  00001318  44000459	trap	#0x459
  377  0000131c  4be00000	jr	r31
  378  00001320  54000000	nop
  379  00001324          	.endproc _cond_broadcast
  381  00001324          	.proc _mbox_create
  382  00001324          	.global _mbox_create
  383  00001324          	_mbox_create:
  384  00001324  44000460	trap	#0x460
  385  00001328  4be00000	jr	r31
  386  0000132c  54000000	nop
  387  00001330          	.endproc _mbox_create
  389  00001330          	.proc _mbox_open
  390  00001330          	.global _mbox_open
  391  00001330          	_mbox_open:
  392  00001330  44000461	trap	#0x461
  393  00001334  4be00000	jr	r31
  394  00001338  54000000	nop
  395  0000133c          	.endproc _mbox_open
  397  0000133c          	.proc _mbox_close
  398  0000133c          	.global _mbox_close
  399  0000133c          	_mbox_close:
  400  0000133c  44000462	trap	#0x462
  401  00001340  4be00000	jr	r31
  402  00001344  54000000	nop
  403  00001348          	.endproc _mbox_close
  405  00001348          	.proc _mbox_send
  406  00001348          	.global _mbox_send
  407  00001348          	_mbox_send:
  408  00001348  44000463	trap	#0x463
  409  0000134c  4be00000	jr	r31
  410  00001350  54000000	nop
  411  00001354          	.endproc _mbox_send
  413  00001354          	.proc _mbox_recv
  414  00001354          	.global _mbox_recv
  415  00001354          	_mbox_recv:
  416  00001354  44000464	trap	#0x464
  417  00001358  4be00000	jr	r31
  418  0000135c  54000000	nop
  419  00001360          	.endproc _mbox_recv
  421  00001360          	.proc _sleep
  422  00001360          	.global _sleep
  423  00001360          	_sleep:
  424  00001360  44000465	trap	#0x465
  425  00001364  4be00000	jr	r31
  426  00001368  54000000	nop
  427  0000136c          	.endproc _sleep
  429  0000136c          	.proc _yield
  430  0000136c          	.global _yield
  431  0000136c          	_yield:
  432  0000136c  44000466	trap	#0x466
  433  00001370  4be00000	jr	r31
  434  00001374  54000000	nop
  435  00001378          	.endproc _yield
  438  00001378          	.proc _Exit
  439  00001378          	.global _Exit
  440  00001378          	_Exit:
  441  00001378  44000500	trap	#0x500
  442  0000137c  4be00000	jr	r31
  443  00001380  54000000	nop
  444  00001384          	.endproc _Exit
  447  00001384          	.proc _malloc
  448  00001384          	.global _malloc
  449  00001384          	_malloc:
  450  00001384  44000467	trap	#0x467
  451  00001388  4be00000	jr	r31
  452  0000138c          	.endproc _malloc
  455  0000138c          	.proc _mfree
  456  0000138c          	.global _mfree
  457  0000138c          	_mfree:
  458  0000138c  44000468	trap	#0x468
  459  00001390  4be00000	jr	r31
  460  00001394          	.endproc _mfree
  461                      ; Compiled by GCC
  463  00001394          	.align 2
  464  00001394          	.proc _isspace
  465  00001394          	.global _isspace
  466  00001394          	_isspace:
  467                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  468  00001394  afbefffc	sw	-4(r29),r30; push fp
  469  00001398  001df020	add	r30,r0,r29; fp = sp
  470  0000139c  afbffff8	sw	-8(r29),r31; push ret addr
  471  000013a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  472  000013a4  afa20000	sw	0(r29),r2
  473  000013a8  afa30004	sw	4(r29),r3
  474  000013ac  afa40008	sw	8(r29),r4
  475  000013b0  83c20003	lb	r2,3(r30)
  476  000013b4  20010000	addi	r1,r0,#0
  477  000013b8  304300ff	andi	r3,r2,#0x00ff
  478  000013bc  60640020	seqi	r4,r3,#32
  479  000013c0  1480002c	bnez	r4,L3_LF2
  480  000013c4  54000000	nop; delay slot nop
  481  000013c8  304300ff	andi	r3,r2,#0x00ff
  482  000013cc  60640009	seqi	r4,r3,#9
  483  000013d0  1480001c	bnez	r4,L3_LF2
  484  000013d4  54000000	nop; delay slot nop
  485  000013d8  304300ff	andi	r3,r2,#0x00ff
  486  000013dc  6064000a	seqi	r4,r3,#10
  487  000013e0  1480000c	bnez	r4,L3_LF2
  488  000013e4  54000000	nop; delay slot nop
  489  000013e8  08000008	j	L2_LF2
  490  000013ec  54000000	nop; delay slot nop
  491  000013f0          	L3_LF2:
  492  000013f0  20010001	addi	r1,r0,#1
  493  000013f4          	L2_LF2:
  494  000013f4  08000004	j	L1_LF2
  495  000013f8  54000000	nop; delay slot nop
  496  000013fc          	L1_LF2:
  497  000013fc  8fa20000	lw	r2,0(r29)
  498  00001400  8fa30004	lw	r3,4(r29)
  499  00001404  8fa40008	lw	r4,8(r29)
  500  00001408  8fdffff8	lw	r31,-8(r30)
  501  0000140c  001ee820	add	r29,r0,r30
  502  00001410  8fdefffc	lw	r30,-4(r30)
  503  00001414  4be00000	jr	r31
  504  00001418  54000000	nop
  505  0000141c          	.endproc _isspace
  506  0000141c          	.align 2
  507  0000141c          	.proc _isxdigit
  508  0000141c          	.global _isxdigit
  509  0000141c          	_isxdigit:
  510                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  511  0000141c  afbefffc	sw	-4(r29),r30; push fp
  512  00001420  001df020	add	r30,r0,r29; fp = sp
  513  00001424  afbffff8	sw	-8(r29),r31; push ret addr
  514  00001428  2fbd0018	subui	r29,r29,#24; alloc local storage
  515  0000142c  afa20000	sw	0(r29),r2
  516  00001430  afa30004	sw	4(r29),r3
  517  00001434  afa40008	sw	8(r29),r4
  518  00001438  83c20003	lb	r2,3(r30)
  519  0000143c  20010000	addi	r1,r0,#0
  520  00001440  304300ff	andi	r3,r2,#0x00ff
  521  00001444  6c64002f	sgtui	r4,r3,#47
  522  00001448  1080001c	beqz	r4,L7_LF2
  523  0000144c  54000000	nop; delay slot nop
  524  00001450  304300ff	andi	r3,r2,#0x00ff
  525  00001454  70640039	sleui	r4,r3,#57
  526  00001458  1480005c	bnez	r4,L6_LF2
  527  0000145c  54000000	nop; delay slot nop
  528  00001460  08000004	j	L7_LF2
  529  00001464  54000000	nop; delay slot nop
  530  00001468          	L7_LF2:
  531  00001468  304300ff	andi	r3,r2,#0x00ff
  532  0000146c  6c640060	sgtui	r4,r3,#96
  533  00001470  1080001c	beqz	r4,L8_LF2
  534  00001474  54000000	nop; delay slot nop
  535  00001478  304300ff	andi	r3,r2,#0x00ff
  536  0000147c  70640066	sleui	r4,r3,#102
  537  00001480  14800034	bnez	r4,L6_LF2
  538  00001484  54000000	nop; delay slot nop
  539  00001488  08000004	j	L8_LF2
  540  0000148c  54000000	nop; delay slot nop
  541  00001490          	L8_LF2:
  542  00001490  304300ff	andi	r3,r2,#0x00ff
  543  00001494  6c640040	sgtui	r4,r3,#64
  544  00001498  10800020	beqz	r4,L5_LF2
  545  0000149c  54000000	nop; delay slot nop
  546  000014a0  304300ff	andi	r3,r2,#0x00ff
  547  000014a4  70640041	sleui	r4,r3,#65
  548  000014a8  1480000c	bnez	r4,L6_LF2
  549  000014ac  54000000	nop; delay slot nop
  550  000014b0  08000008	j	L5_LF2
  551  000014b4  54000000	nop; delay slot nop
  552  000014b8          	L6_LF2:
  553  000014b8  20010001	addi	r1,r0,#1
  554  000014bc          	L5_LF2:
  555  000014bc  08000004	j	L4_LF2
  556  000014c0  54000000	nop; delay slot nop
  557  000014c4          	L4_LF2:
  558  000014c4  8fa20000	lw	r2,0(r29)
  559  000014c8  8fa30004	lw	r3,4(r29)
  560  000014cc  8fa40008	lw	r4,8(r29)
  561  000014d0  8fdffff8	lw	r31,-8(r30)
  562  000014d4  001ee820	add	r29,r0,r30
  563  000014d8  8fdefffc	lw	r30,-4(r30)
  564  000014dc  4be00000	jr	r31
  565  000014e0  54000000	nop
  566  000014e4          	.endproc _isxdigit
  567  000014e4          	.align 2
  568  000014e4          	.proc _dstrcpy
  569  000014e4          	.global _dstrcpy
  570  000014e4          	_dstrcpy:
  571                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  572  000014e4  afbefffc	sw	-4(r29),r30; push fp
  573  000014e8  001df020	add	r30,r0,r29; fp = sp
  574  000014ec  afbffff8	sw	-8(r29),r31; push ret addr
  575  000014f0  2fbd0018	subui	r29,r29,#24; alloc local storage
  576  000014f4  afa20000	sw	0(r29),r2
  577  000014f8  afa30004	sw	4(r29),r3
  578  000014fc  8fc10000	lw	r1,(r30)
  579  00001500  afc1fff4	sw	-12(r30),r1
  580  00001504          	L10_LF2:
  581  00001504  8fc10000	lw	r1,(r30)
  582  00001508  20220001	addi	r2,r1,#1
  583  0000150c  afc20000	sw	(r30),r2
  584  00001510  8fc20004	lw	r2,4(r30)
  585  00001514  20430001	addi	r3,r2,#1
  586  00001518  afc30004	sw	4(r30),r3
  587  0000151c  80420000	lb	r2,(r2)
  588  00001520  a0220000	sb	(r1),r2
  589  00001524  a3c2fff3	sb	-13(r30),r2
  590  00001528          	L12_LF2:
  591  00001528  93c1fff3	lbu	r1,-13(r30)
  592  0000152c  64220000	snei	r2,r1,#0
  593  00001530  1440000c	bnez	r2,L13_LF2
  594  00001534  54000000	nop; delay slot nop
  595  00001538  0800000c	j	L11_LF2
  596  0000153c  54000000	nop; delay slot nop
  597  00001540          	L13_LF2:
  598  00001540  0bffffc0	j	L10_LF2
  599  00001544  54000000	nop; delay slot nop
  600  00001548          	L11_LF2:
  601  00001548  8fc1fff4	lw	r1,-12(r30)
  602  0000154c  08000004	j	L9_LF2
  603  00001550  54000000	nop; delay slot nop
  604  00001554          	L9_LF2:
  605  00001554  8fa20000	lw	r2,0(r29)
  606  00001558  8fa30004	lw	r3,4(r29)
  607  0000155c  8fdffff8	lw	r31,-8(r30)
  608  00001560  001ee820	add	r29,r0,r30
  609  00001564  8fdefffc	lw	r30,-4(r30)
  610  00001568  4be00000	jr	r31
  611  0000156c  54000000	nop
  612  00001570          	.endproc _dstrcpy
  613  00001570          	.align 2
  614  00001570          	.proc _dstrncpy
  615  00001570          	.global _dstrncpy
  616  00001570          	_dstrncpy:
  617                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  618  00001570  afbefffc	sw	-4(r29),r30; push fp
  619  00001574  001df020	add	r30,r0,r29; fp = sp
  620  00001578  afbffff8	sw	-8(r29),r31; push ret addr
  621  0000157c  2fbd0018	subui	r29,r29,#24; alloc local storage
  622  00001580  afa20000	sw	0(r29),r2
  623  00001584  afa30004	sw	4(r29),r3
  624  00001588  8fc10000	lw	r1,(r30)
  625  0000158c  afc1fff4	sw	-12(r30),r1
  626  00001590          	L15_LF2:
  627  00001590  8fc10008	lw	r1,8(r30)
  628  00001594  2022ffff	addi	r2,r1,#-1
  629  00001598  afc20008	sw	8(r30),r2
  630  0000159c  70210000	slei	r1,r1,#0
  631  000015a0  1020000c	beqz	r1,L18_LF2
  632  000015a4  54000000	nop; delay slot nop
  633  000015a8  08000048	j	L16_LF2
  634  000015ac  54000000	nop; delay slot nop
  635  000015b0          	L18_LF2:
  636  000015b0  8fc10000	lw	r1,(r30)
  637  000015b4  20220001	addi	r2,r1,#1
  638  000015b8  afc20000	sw	(r30),r2
  639  000015bc  8fc20004	lw	r2,4(r30)
  640  000015c0  20430001	addi	r3,r2,#1
  641  000015c4  afc30004	sw	4(r30),r3
  642  000015c8  80420000	lb	r2,(r2)
  643  000015cc  a0220000	sb	(r1),r2
  644  000015d0  a3c2fff3	sb	-13(r30),r2
  645  000015d4          	L17_LF2:
  646  000015d4  93c1fff3	lbu	r1,-13(r30)
  647  000015d8  64220000	snei	r2,r1,#0
  648  000015dc  1440000c	bnez	r2,L19_LF2
  649  000015e0  54000000	nop; delay slot nop
  650  000015e4  0800000c	j	L16_LF2
  651  000015e8  54000000	nop; delay slot nop
  652  000015ec          	L19_LF2:
  653  000015ec  0bffffa0	j	L15_LF2
  654  000015f0  54000000	nop; delay slot nop
  655  000015f4          	L16_LF2:
  656  000015f4  8fc1fff4	lw	r1,-12(r30)
  657  000015f8  08000004	j	L14_LF2
  658  000015fc  54000000	nop; delay slot nop
  659  00001600          	L14_LF2:
  660  00001600  8fa20000	lw	r2,0(r29)
  661  00001604  8fa30004	lw	r3,4(r29)
  662  00001608  8fdffff8	lw	r31,-8(r30)
  663  0000160c  001ee820	add	r29,r0,r30
  664  00001610  8fdefffc	lw	r30,-4(r30)
  665  00001614  4be00000	jr	r31
  666  00001618  54000000	nop
  667  0000161c          	.endproc _dstrncpy
  668  0000161c          	.align 2
  669  0000161c          	.proc _dstrcat
  670  0000161c          	.global _dstrcat
  671  0000161c          	_dstrcat:
  672                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  673  0000161c  afbefffc	sw	-4(r29),r30; push fp
  674  00001620  001df020	add	r30,r0,r29; fp = sp
  675  00001624  afbffff8	sw	-8(r29),r31; push ret addr
  676  00001628  2fbd0018	subui	r29,r29,#24; alloc local storage
  677  0000162c  afa20000	sw	0(r29),r2
  678  00001630  8fc10000	lw	r1,(r30)
  679  00001634  afc1fff4	sw	-12(r30),r1
  680  00001638          	L21_LF2:
  681  00001638  8fc10000	lw	r1,(r30)
  682  0000163c  90220000	lbu	r2,(r1)
  683  00001640  64410000	snei	r1,r2,#0
  684  00001644  1420000c	bnez	r1,L23_LF2
  685  00001648  54000000	nop; delay slot nop
  686  0000164c  0800001c	j	L22_LF2
  687  00001650  54000000	nop; delay slot nop
  688  00001654          	L23_LF2:
  689  00001654  8fc20000	lw	r2,(r30)
  690  00001658  20410001	addi	r1,r2,#1
  691  0000165c  00011020	add	r2,r0,r1
  692  00001660  afc20000	sw	(r30),r2
  693  00001664  0bffffd0	j	L21_LF2
  694  00001668  54000000	nop; delay slot nop
  695  0000166c          	L22_LF2:
  696  0000166c  23bdfff8	addi	r29,r29,#-8
  697  00001670  001d0820	add	r1,r0,r29
  698  00001674  8fc20000	lw	r2,(r30)
  699  00001678  ac220000	sw	(r1),r2
  700  0000167c  8fc20004	lw	r2,4(r30)
  701  00001680  ac220004	sw	4(r1),r2
  702  00001684  0ffffe5c	jal	_dstrcpy
  703  00001688  54000000	nop; delay slot nop
  704  0000168c  23bd0008	addi	r29,r29,#8
  705  00001690  8fc1fff4	lw	r1,-12(r30)
  706  00001694  08000004	j	L20_LF2
  707  00001698  54000000	nop; delay slot nop
  708  0000169c          	L20_LF2:
  709  0000169c  8fa20000	lw	r2,0(r29)
  710  000016a0  8fdffff8	lw	r31,-8(r30)
  711  000016a4  001ee820	add	r29,r0,r30
  712  000016a8  8fdefffc	lw	r30,-4(r30)
  713  000016ac  4be00000	jr	r31
  714  000016b0  54000000	nop
  715  000016b4          	.endproc _dstrcat
  716  000016b4          	.align 2
  717  000016b4          	.proc _dstrncmp
  718  000016b4          	.global _dstrncmp
  719  000016b4          	_dstrncmp:
  720                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  721  000016b4  afbefffc	sw	-4(r29),r30; push fp
  722  000016b8  001df020	add	r30,r0,r29; fp = sp
  723  000016bc  afbffff8	sw	-8(r29),r31; push ret addr
  724  000016c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  725  000016c4  afa20000	sw	0(r29),r2
  726  000016c8  afa30004	sw	4(r29),r3
  727  000016cc  54000000	nop
  728  000016d0  20010000	addi	r1,r0,#0
  729  000016d4  afc1fff4	sw	-12(r30),r1
  730  000016d8          	L25_LF2:
  731  000016d8  8fc1fff4	lw	r1,-12(r30)
  732  000016dc  8fc20008	lw	r2,8(r30)
  733  000016e0  0022082a	slt	r1,r1,r2
  734  000016e4  1420000c	bnez	r1,L28_LF2
  735  000016e8  54000000	nop; delay slot nop
  736  000016ec  08000088	j	L26_LF2
  737  000016f0  54000000	nop; delay slot nop
  738  000016f4          	L28_LF2:
  739  000016f4  8fc10004	lw	r1,4(r30)
  740  000016f8  90220000	lbu	r2,(r1)
  741  000016fc  64410000	snei	r1,r2,#0
  742  00001700  14200018	bnez	r1,L29_LF2
  743  00001704  54000000	nop; delay slot nop
  744  00001708  20010000	addi	r1,r0,#0
  745  0000170c  080000d8	j	L24_LF2
  746  00001710  54000000	nop; delay slot nop
  747  00001714  08000028	j	L30_LF2
  748  00001718  54000000	nop; delay slot nop
  749  0000171c          	L29_LF2:
  750  0000171c  8fc10000	lw	r1,(r30)
  751  00001720  8fc20004	lw	r2,4(r30)
  752  00001724  90210000	lbu	r1,(r1)
  753  00001728  90420000	lbu	r2,(r2)
  754  0000172c  00220829	sne	r1,r1,r2
  755  00001730  1020000c	beqz	r1,L30_LF2
  756  00001734  54000000	nop; delay slot nop
  757  00001738  0800003c	j	L26_LF2
  758  0000173c  54000000	nop; delay slot nop
  759  00001740          	L31_LF2:
  760  00001740          	L30_LF2:
  761  00001740  8fc20000	lw	r2,(r30)
  762  00001744  20410001	addi	r1,r2,#1
  763  00001748  00011020	add	r2,r0,r1
  764  0000174c  afc20000	sw	(r30),r2
  765  00001750  8fc20004	lw	r2,4(r30)
  766  00001754  20410001	addi	r1,r2,#1
  767  00001758  00011020	add	r2,r0,r1
  768  0000175c  afc20004	sw	4(r30),r2
  769  00001760          	L27_LF2:
  770  00001760  8fc2fff4	lw	r2,-12(r30)
  771  00001764  20410001	addi	r1,r2,#1
  772  00001768  00011020	add	r2,r0,r1
  773  0000176c  afc2fff4	sw	-12(r30),r2
  774  00001770  0bffff64	j	L25_LF2
  775  00001774  54000000	nop; delay slot nop
  776  00001778          	L26_LF2:
  777  00001778  8fc1fff4	lw	r1,-12(r30)
  778  0000177c  8fc20008	lw	r2,8(r30)
  779  00001780  00220828	seq	r1,r1,r2
  780  00001784  10200018	beqz	r1,L32_LF2
  781  00001788  54000000	nop; delay slot nop
  782  0000178c  20010000	addi	r1,r0,#0
  783  00001790  08000054	j	L24_LF2
  784  00001794  54000000	nop; delay slot nop
  785  00001798  0800004c	j	L33_LF2
  786  0000179c  54000000	nop; delay slot nop
  787  000017a0          	L32_LF2:
  788  000017a0  8fc20000	lw	r2,(r30)
  789  000017a4  90410000	lbu	r1,(r2)
  790  000017a8  8fc20004	lw	r2,4(r30)
  791  000017ac  90430000	lbu	r3,(r2)
  792  000017b0  00230822	sub	r1,r1,r3
  793  000017b4  74220000	sgei	r2,r1,#0
  794  000017b8  10400020	beqz	r2,L34_LF2
  795  000017bc  54000000	nop; delay slot nop
  796  000017c0  8fc10000	lw	r1,(r30)
  797  000017c4  8fc20004	lw	r2,4(r30)
  798  000017c8  90210000	lbu	r1,(r1)
  799  000017cc  90420000	lbu	r2,(r2)
  800  000017d0  00220829	sne	r1,r1,r2
  801  000017d4  08000008	j	L35_LF2
  802  000017d8  54000000	nop; delay slot nop
  803  000017dc          	L34_LF2:
  804  000017dc  2001ffff	addi	r1,r0,#-1
  805  000017e0          	L35_LF2:
  806  000017e0  08000004	j	L24_LF2
  807  000017e4  54000000	nop; delay slot nop
  808  000017e8          	L33_LF2:
  809  000017e8          	L24_LF2:
  810  000017e8  8fa20000	lw	r2,0(r29)
  811  000017ec  8fa30004	lw	r3,4(r29)
  812  000017f0  8fdffff8	lw	r31,-8(r30)
  813  000017f4  001ee820	add	r29,r0,r30
  814  000017f8  8fdefffc	lw	r30,-4(r30)
  815  000017fc  4be00000	jr	r31
  816  00001800  54000000	nop
  817  00001804          	.endproc _dstrncmp
  818  00001804          	.align 2
  819  00001804          	.proc _dstrlen
  820  00001804          	.global _dstrlen
  821  00001804          	_dstrlen:
  822                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  823  00001804  afbefffc	sw	-4(r29),r30; push fp
  824  00001808  001df020	add	r30,r0,r29; fp = sp
  825  0000180c  afbffff8	sw	-8(r29),r31; push ret addr
  826  00001810  2fbd0018	subui	r29,r29,#24; alloc local storage
  827  00001814  afa20000	sw	0(r29),r2
  828  00001818  20010000	addi	r1,r0,#0
  829  0000181c  afc1fff4	sw	-12(r30),r1
  830  00001820          	L37_LF2:
  831  00001820  8fc10000	lw	r1,(r30)
  832  00001824  20220001	addi	r2,r1,#1
  833  00001828  afc20000	sw	(r30),r2
  834  0000182c  90210000	lbu	r1,(r1)
  835  00001830  64220000	snei	r2,r1,#0
  836  00001834  1440000c	bnez	r2,L39_LF2
  837  00001838  54000000	nop; delay slot nop
  838  0000183c  0800001c	j	L38_LF2
  839  00001840  54000000	nop; delay slot nop
  840  00001844          	L39_LF2:
  841  00001844  8fc2fff4	lw	r2,-12(r30)
  842  00001848  20410001	addi	r1,r2,#1
  843  0000184c  00011020	add	r2,r0,r1
  844  00001850  afc2fff4	sw	-12(r30),r2
  845  00001854  0bffffc8	j	L37_LF2
  846  00001858  54000000	nop; delay slot nop
  847  0000185c          	L38_LF2:
  848  0000185c  8fc1fff4	lw	r1,-12(r30)
  849  00001860  08000004	j	L36_LF2
  850  00001864  54000000	nop; delay slot nop
  851  00001868          	L36_LF2:
  852  00001868  8fa20000	lw	r2,0(r29)
  853  0000186c  8fdffff8	lw	r31,-8(r30)
  854  00001870  001ee820	add	r29,r0,r30
  855  00001874  8fdefffc	lw	r30,-4(r30)
  856  00001878  4be00000	jr	r31
  857  0000187c  54000000	nop
  858  00001880          	.endproc _dstrlen
  859  00001880          	.align 2
  860  00001880          	.proc _dstrstr
  861  00001880          	.global _dstrstr
  862  00001880          	_dstrstr:
  863                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  864  00001880  afbefffc	sw	-4(r29),r30; push fp
  865  00001884  001df020	add	r30,r0,r29; fp = sp
  866  00001888  afbffff8	sw	-8(r29),r31; push ret addr
  867  0000188c  2fbd0018	subui	r29,r29,#24; alloc local storage
  868  00001890  afa20000	sw	0(r29),r2
  869  00001894  23bdfff8	addi	r29,r29,#-8
  870  00001898  001d0820	add	r1,r0,r29
  871  0000189c  8fc20004	lw	r2,4(r30)
  872  000018a0  ac220000	sw	(r1),r2
  873  000018a4  0fffff5c	jal	_dstrlen
  874  000018a8  54000000	nop; delay slot nop
  875  000018ac  23bd0008	addi	r29,r29,#8
  876  000018b0  afc1fff4	sw	-12(r30),r1
  877  000018b4          	L41_LF2:
  878  000018b4  8fc10000	lw	r1,(r30)
  879  000018b8  90220000	lbu	r2,(r1)
  880  000018bc  64410000	snei	r1,r2,#0
  881  000018c0  1420000c	bnez	r1,L43_LF2
  882  000018c4  54000000	nop; delay slot nop
  883  000018c8  08000060	j	L42_LF2
  884  000018cc  54000000	nop; delay slot nop
  885  000018d0          	L43_LF2:
  886  000018d0  23bdfff0	addi	r29,r29,#-16
  887  000018d4  001d0820	add	r1,r0,r29
  888  000018d8  8fc20000	lw	r2,(r30)
  889  000018dc  ac220000	sw	(r1),r2
  890  000018e0  8fc20004	lw	r2,4(r30)
  891  000018e4  ac220004	sw	4(r1),r2
  892  000018e8  8fc2fff4	lw	r2,-12(r30)
  893  000018ec  ac220008	sw	8(r1),r2
  894  000018f0  0ffffdc0	jal	_dstrncmp
  895  000018f4  54000000	nop; delay slot nop
  896  000018f8  23bd0010	addi	r29,r29,#16
  897  000018fc  64220000	snei	r2,r1,#0
  898  00001900  14400010	bnez	r2,L44_LF2
  899  00001904  54000000	nop; delay slot nop
  900  00001908  8fc10000	lw	r1,(r30)
  901  0000190c  08000028	j	L40_LF2
  902  00001910  54000000	nop; delay slot nop
  903  00001914          	L44_LF2:
  904  00001914  8fc20000	lw	r2,(r30)
  905  00001918  20410001	addi	r1,r2,#1
  906  0000191c  00011020	add	r2,r0,r1
  907  00001920  afc20000	sw	(r30),r2
  908  00001924  0bffff8c	j	L41_LF2
  909  00001928  54000000	nop; delay slot nop
  910  0000192c          	L42_LF2:
  911  0000192c  20010000	addi	r1,r0,#0
  912  00001930  08000004	j	L40_LF2
  913  00001934  54000000	nop; delay slot nop
  914  00001938          	L40_LF2:
  915  00001938  8fa20000	lw	r2,0(r29)
  916  0000193c  8fdffff8	lw	r31,-8(r30)
  917  00001940  001ee820	add	r29,r0,r30
  918  00001944  8fdefffc	lw	r30,-4(r30)
  919  00001948  4be00000	jr	r31
  920  0000194c  54000000	nop
  921  00001950          	.endproc _dstrstr
  922  00001950          	.align 2
  923  00001950          	.proc _dmindex
  924  00001950          	.global _dmindex
  925  00001950          	_dmindex:
  926                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  927  00001950  afbefffc	sw	-4(r29),r30; push fp
  928  00001954  001df020	add	r30,r0,r29; fp = sp
  929  00001958  afbffff8	sw	-8(r29),r31; push ret addr
  930  0000195c  2fbd0018	subui	r29,r29,#24; alloc local storage
  931  00001960  afa20000	sw	0(r29),r2
  932  00001964  54000000	nop
  933  00001968          	L46_LF2:
  934  00001968  8fc10000	lw	r1,(r30)
  935  0000196c  90220000	lbu	r2,(r1)
  936  00001970  64410000	snei	r1,r2,#0
  937  00001974  1420000c	bnez	r1,L48_LF2
  938  00001978  54000000	nop; delay slot nop
  939  0000197c  08000070	j	L47_LF2
  940  00001980  54000000	nop; delay slot nop
  941  00001984          	L48_LF2:
  942  00001984  8fc10004	lw	r1,4(r30)
  943  00001988  afc1fff4	sw	-12(r30),r1
  944  0000198c          	L49_LF2:
  945  0000198c  8fc1fff4	lw	r1,-12(r30)
  946  00001990  90220000	lbu	r2,(r1)
  947  00001994  64410000	snei	r1,r2,#0
  948  00001998  1420000c	bnez	r1,L52_LF2
  949  0000199c  54000000	nop; delay slot nop
  950  000019a0  08000044	j	L50_LF2
  951  000019a4  54000000	nop; delay slot nop
  952  000019a8          	L52_LF2:
  953  000019a8  8fc10000	lw	r1,(r30)
  954  000019ac  8fc2fff4	lw	r2,-12(r30)
  955  000019b0  90210000	lbu	r1,(r1)
  956  000019b4  90420000	lbu	r2,(r2)
  957  000019b8  00220828	seq	r1,r1,r2
  958  000019bc  10200010	beqz	r1,L51_LF2
  959  000019c0  54000000	nop; delay slot nop
  960  000019c4  8fc10000	lw	r1,(r30)
  961  000019c8  08000030	j	L45_LF2
  962  000019cc  54000000	nop; delay slot nop
  963  000019d0          	L53_LF2:
  964  000019d0          	L51_LF2:
  965  000019d0  8fc2fff4	lw	r2,-12(r30)
  966  000019d4  20410001	addi	r1,r2,#1
  967  000019d8  00011020	add	r2,r0,r1
  968  000019dc  afc2fff4	sw	-12(r30),r2
  969  000019e0  0bffffa8	j	L49_LF2
  970  000019e4  54000000	nop; delay slot nop
  971  000019e8          	L50_LF2:
  972  000019e8  0bffff7c	j	L46_LF2
  973  000019ec  54000000	nop; delay slot nop
  974  000019f0          	L47_LF2:
  975  000019f0  20010000	addi	r1,r0,#0
  976  000019f4  08000004	j	L45_LF2
  977  000019f8  54000000	nop; delay slot nop
  978  000019fc          	L45_LF2:
  979  000019fc  8fa20000	lw	r2,0(r29)
  980  00001a00  8fdffff8	lw	r31,-8(r30)
  981  00001a04  001ee820	add	r29,r0,r30
  982  00001a08  8fdefffc	lw	r30,-4(r30)
  983  00001a0c  4be00000	jr	r31
  984  00001a10  54000000	nop
  985  00001a14          	.endproc _dmindex
  986  00001a14          	.align 2
  987  00001a14          	.proc _dindex
  988  00001a14          	.global _dindex
  989  00001a14          	_dindex:
  990                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  991  00001a14  afbefffc	sw	-4(r29),r30; push fp
  992  00001a18  001df020	add	r30,r0,r29; fp = sp
  993  00001a1c  afbffff8	sw	-8(r29),r31; push ret addr
  994  00001a20  2fbd0010	subui	r29,r29,#16; alloc local storage
  995  00001a24  afa20000	sw	0(r29),r2
  996  00001a28  54000000	nop
  997  00001a2c          	L55_LF2:
  998  00001a2c  8fc10000	lw	r1,(r30)
  999  00001a30  90220000	lbu	r2,(r1)
 1000  00001a34  64410000	snei	r1,r2,#0
 1001  00001a38  1420000c	bnez	r1,L57_LF2
 1002  00001a3c  54000000	nop; delay slot nop
 1003  00001a40  08000040	j	L56_LF2
 1004  00001a44  54000000	nop; delay slot nop
 1005  00001a48          	L57_LF2:
 1006  00001a48  8fc10000	lw	r1,(r30)
 1007  00001a4c  90220000	lbu	r2,(r1)
 1008  00001a50  8fc10004	lw	r1,4(r30)
 1009  00001a54  00411028	seq	r2,r2,r1
 1010  00001a58  10400010	beqz	r2,L58_LF2
 1011  00001a5c  54000000	nop; delay slot nop
 1012  00001a60  8fc10000	lw	r1,(r30)
 1013  00001a64  08000028	j	L54_LF2
 1014  00001a68  54000000	nop; delay slot nop
 1015  00001a6c          	L58_LF2:
 1016  00001a6c  8fc20000	lw	r2,(r30)
 1017  00001a70  20410001	addi	r1,r2,#1
 1018  00001a74  00011020	add	r2,r0,r1
 1019  00001a78  afc20000	sw	(r30),r2
 1020  00001a7c  0bffffac	j	L55_LF2
 1021  00001a80  54000000	nop; delay slot nop
 1022  00001a84          	L56_LF2:
 1023  00001a84  20010000	addi	r1,r0,#0
 1024  00001a88  08000004	j	L54_LF2
 1025  00001a8c  54000000	nop; delay slot nop
 1026  00001a90          	L54_LF2:
 1027  00001a90  8fa20000	lw	r2,0(r29)
 1028  00001a94  8fdffff8	lw	r31,-8(r30)
 1029  00001a98  001ee820	add	r29,r0,r30
 1030  00001a9c  8fdefffc	lw	r30,-4(r30)
 1031  00001aa0  4be00000	jr	r31
 1032  00001aa4  54000000	nop
 1033  00001aa8          	.endproc _dindex
 1034  00001aa8          	.align 2
 1035  00001aa8          	.proc _ditoa
 1036  00001aa8          	.global _ditoa
 1037  00001aa8          	_ditoa:
 1038                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1039  00001aa8  afbefffc	sw	-4(r29),r30; push fp
 1040  00001aac  001df020	add	r30,r0,r29; fp = sp
 1041  00001ab0  afbffff8	sw	-8(r29),r31; push ret addr
 1042  00001ab4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1043  00001ab8  afa20000	sw	0(r29),r2
 1044  00001abc  afa30004	sw	4(r29),r3
 1045  00001ac0  8fc10000	lw	r1,(r30)
 1046  00001ac4  68220000	slti	r2,r1,#0
 1047  00001ac8  1040002c	beqz	r2,L60_LF2
 1048  00001acc  54000000	nop; delay slot nop
 1049  00001ad0  8fc10004	lw	r1,4(r30)
 1050  00001ad4  20220001	addi	r2,r1,#1
 1051  00001ad8  afc20004	sw	4(r30),r2
 1052  00001adc  2002002d	addi	r2,r0,(#0x2d)&0xff
 1053  00001ae0  a0220000	sb	(r1),r2
 1054  00001ae4  8fc10000	lw	r1,(r30)
 1055  00001ae8  00011022	sub	r2,r0,r1
 1056  00001aec  afc20000	sw	(r30),r2
 1057  00001af0  08000118	j	L61_LF2
 1058  00001af4  54000000	nop; delay slot nop
 1059  00001af8          	L60_LF2:
 1060  00001af8  8fc10000	lw	r1,(r30)
 1061  00001afc  64220000	snei	r2,r1,#0
 1062  00001b00  14400020	bnez	r2,L62_LF2
 1063  00001b04  54000000	nop; delay slot nop
 1064  00001b08  8fc10004	lw	r1,4(r30)
 1065  00001b0c  20220001	addi	r2,r1,#1
 1066  00001b10  afc20004	sw	4(r30),r2
 1067  00001b14  20020030	addi	r2,r0,(#0x30)&0xff
 1068  00001b18  a0220000	sb	(r1),r2
 1069  00001b1c  080000ec	j	L61_LF2
 1070  00001b20  54000000	nop; delay slot nop
 1071  00001b24          	L62_LF2:
 1072  00001b24  20010001	addi	r1,r0,#1
 1073  00001b28  afc1fff4	sw	-12(r30),r1
 1074  00001b2c          	L64_LF2:
 1075  00001b2c  8fc1fff4	lw	r1,-12(r30)
 1076  00001b30  8fc20000	lw	r2,(r30)
 1077  00001b34  0022082c	sle	r1,r1,r2
 1078  00001b38  1420000c	bnez	r1,L66_LF2
 1079  00001b3c  54000000	nop; delay slot nop
 1080  00001b40  08000024	j	L65_LF2
 1081  00001b44  54000000	nop; delay slot nop
 1082  00001b48          	L67_LF2:
 1083  00001b48          	L66_LF2:
 1084  00001b48  8fc1fff4	lw	r1,-12(r30)
 1085  00001b4c  00011820	add	r3,r0,r1
 1086  00001b50  50620002	slli	r2,r3,#0x2
 1087  00001b54  00411020	add	r2,r2,r1
 1088  00001b58  50410001	slli	r1,r2,#0x1
 1089  00001b5c  afc1fff4	sw	-12(r30),r1
 1090  00001b60  0bffffc8	j	L64_LF2
 1091  00001b64  54000000	nop; delay slot nop
 1092  00001b68          	L65_LF2:
 1093  00001b68  54000000	nop
 1094  00001b6c          	L68_LF2:
 1095  00001b6c  8fc1fff4	lw	r1,-12(r30)
 1096  00001b70  2002000a	addi	r2,r0,#10
 1097  00001b74  00200035	movi2fp	f0,r1
 1098  00001b78  00400835	movi2fp	f1,r2
 1099  00001b7c  0401000f	div	f0,f0,f1
 1100  00001b80  00000834	movfp2i	r1,f0
 1101  00001b84  afc1fff4	sw	-12(r30),r1
 1102  00001b88  8fc10004	lw	r1,4(r30)
 1103  00001b8c  20220001	addi	r2,r1,#1
 1104  00001b90  afc20004	sw	4(r30),r2
 1105  00001b94  8fc20000	lw	r2,(r30)
 1106  00001b98  8fc3fff4	lw	r3,-12(r30)
 1107  00001b9c  00400035	movi2fp	f0,r2
 1108  00001ba0  00600835	movi2fp	f1,r3
 1109  00001ba4  0401000f	div	f0,f0,f1
 1110  00001ba8  00001034	movfp2i	r2,f0
 1111  00001bac  00021820	add	r3,r0,r2
 1112  00001bb0  20620030	addi	r2,r3,#48
 1113  00001bb4  a0220000	sb	(r1),r2
 1114  00001bb8  8fc10000	lw	r1,(r30)
 1115  00001bbc  8fc3fff4	lw	r3,-12(r30)
 1116  00001bc0  00200035	movi2fp	f0,r1
 1117  00001bc4  00600835	movi2fp	f1,r3
 1118  00001bc8  0401000f	div	f0,f0,f1
 1119  00001bcc  00001034	movfp2i	r2,f0
 1120  00001bd0  8fc3fff4	lw	r3,-12(r30)
 1121  00001bd4  00400035	movi2fp	f0,r2
 1122  00001bd8  00600835	movi2fp	f1,r3
 1123  00001bdc  0401000e	mult	f0,f0,f1
 1124  00001be0  00001034	movfp2i	r2,f0
 1125  00001be4  00220822	sub	r1,r1,r2
 1126  00001be8  afc10000	sw	(r30),r1
 1127  00001bec          	L70_LF2:
 1128  00001bec  8fc1fff4	lw	r1,-12(r30)
 1129  00001bf0  6c220001	sgti	r2,r1,#1
 1130  00001bf4  1440000c	bnez	r2,L71_LF2
 1131  00001bf8  54000000	nop; delay slot nop
 1132  00001bfc  0800000c	j	L61_LF2
 1133  00001c00  54000000	nop; delay slot nop
 1134  00001c04          	L71_LF2:
 1135  00001c04  0bffff64	j	L68_LF2
 1136  00001c08  54000000	nop; delay slot nop
 1137  00001c0c          	L69_LF2:
 1138  00001c0c          	L63_LF2:
 1139  00001c0c          	L61_LF2:
 1140  00001c0c  8fc10004	lw	r1,4(r30)
 1141  00001c10  20020000	addi	r2,r0,(#0x0)&0xff
 1142  00001c14  a0220000	sb	(r1),r2
 1143  00001c18          	L59_LF2:
 1144  00001c18  8fa20000	lw	r2,0(r29)
 1145  00001c1c  8fa30004	lw	r3,4(r29)
 1146  00001c20  8fdffff8	lw	r31,-8(r30)
 1147  00001c24  001ee820	add	r29,r0,r30
 1148  00001c28  8fdefffc	lw	r30,-4(r30)
 1149  00001c2c  4be00000	jr	r31
 1150  00001c30  54000000	nop
 1151  00001c34          	.endproc _ditoa
 1152  00001c34          	.align 2
 1153  00001c34          	.proc _dstrtol
 1154  00001c34          	.global _dstrtol
 1155  00001c34          	_dstrtol:
 1156                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1157  00001c34  afbefffc	sw	-4(r29),r30; push fp
 1158  00001c38  001df020	add	r30,r0,r29; fp = sp
 1159  00001c3c  afbffff8	sw	-8(r29),r31; push ret addr
 1160  00001c40  2fbd0020	subui	r29,r29,#32; alloc local storage
 1161  00001c44  afa20000	sw	0(r29),r2
 1162  00001c48  20010000	addi	r1,r0,#0
 1163  00001c4c  afc1fff4	sw	-12(r30),r1
 1164  00001c50          	L73_LF2:
 1165  00001c50  8fc10000	lw	r1,(r30)
 1166  00001c54  90220000	lbu	r2,(r1)
 1167  00001c58  60410020	seqi	r1,r2,#32
 1168  00001c5c  14200034	bnez	r1,L75_LF2
 1169  00001c60  54000000	nop; delay slot nop
 1170  00001c64  8fc10000	lw	r1,(r30)
 1171  00001c68  90220000	lbu	r2,(r1)
 1172  00001c6c  60410009	seqi	r1,r2,#9
 1173  00001c70  14200020	bnez	r1,L75_LF2
 1174  00001c74  54000000	nop; delay slot nop
 1175  00001c78  8fc10000	lw	r1,(r30)
 1176  00001c7c  90220000	lbu	r2,(r1)
 1177  00001c80  6041000a	seqi	r1,r2,#10
 1178  00001c84  1420000c	bnez	r1,L75_LF2
 1179  00001c88  54000000	nop; delay slot nop
 1180  00001c8c  0800001c	j	L74_LF2
 1181  00001c90  54000000	nop; delay slot nop
 1182  00001c94          	L75_LF2:
 1183  00001c94  8fc20000	lw	r2,(r30)
 1184  00001c98  20410001	addi	r1,r2,#1
 1185  00001c9c  00011020	add	r2,r0,r1
 1186  00001ca0  afc20000	sw	(r30),r2
 1187  00001ca4  0bffffa8	j	L73_LF2
 1188  00001ca8  54000000	nop; delay slot nop
 1189  00001cac          	L74_LF2:
 1190  00001cac  8fc10004	lw	r1,4(r30)
 1191  00001cb0  64220000	snei	r2,r1,#0
 1192  00001cb4  10400010	beqz	r2,L76_LF2
 1193  00001cb8  54000000	nop; delay slot nop
 1194  00001cbc  8fc10004	lw	r1,4(r30)
 1195  00001cc0  8fc20000	lw	r2,(r30)
 1196  00001cc4  ac220000	sw	(r1),r2
 1197  00001cc8          	L76_LF2:
 1198  00001cc8  8fc10000	lw	r1,(r30)
 1199  00001ccc  90220000	lbu	r2,(r1)
 1200  00001cd0  64410000	snei	r1,r2,#0
 1201  00001cd4  14200010	bnez	r1,L77_LF2
 1202  00001cd8  54000000	nop; delay slot nop
 1203  00001cdc  8fc1fff4	lw	r1,-12(r30)
 1204  00001ce0  08000294	j	L72_LF2
 1205  00001ce4  54000000	nop; delay slot nop
 1206  00001ce8          	L77_LF2:
 1207  00001ce8  8fc10000	lw	r1,(r30)
 1208  00001cec  90220000	lbu	r2,(r1)
 1209  00001cf0  6041002d	seqi	r1,r2,#45
 1210  00001cf4  10200024	beqz	r1,L78_LF2
 1211  00001cf8  54000000	nop; delay slot nop
 1212  00001cfc  2001ffff	addi	r1,r0,#-1
 1213  00001d00  afc1ffec	sw	-20(r30),r1
 1214  00001d04  8fc20000	lw	r2,(r30)
 1215  00001d08  20410001	addi	r1,r2,#1
 1216  00001d0c  00011020	add	r2,r0,r1
 1217  00001d10  afc20000	sw	(r30),r2
 1218  00001d14  0800000c	j	L79_LF2
 1219  00001d18  54000000	nop; delay slot nop
 1220  00001d1c          	L78_LF2:
 1221  00001d1c  20010001	addi	r1,r0,#1
 1222  00001d20  afc1ffec	sw	-20(r30),r1
 1223  00001d24          	L79_LF2:
 1224  00001d24  8fc10008	lw	r1,8(r30)
 1225  00001d28  64220000	snei	r2,r1,#0
 1226  00001d2c  14400090	bnez	r2,L80_LF2
 1227  00001d30  54000000	nop; delay slot nop
 1228  00001d34  8fc10000	lw	r1,(r30)
 1229  00001d38  90220000	lbu	r2,(r1)
 1230  00001d3c  60410030	seqi	r1,r2,#48
 1231  00001d40  10200074	beqz	r1,L81_LF2
 1232  00001d44  54000000	nop; delay slot nop
 1233  00001d48  8fc20000	lw	r2,(r30)
 1234  00001d4c  20410001	addi	r1,r2,#1
 1235  00001d50  00011020	add	r2,r0,r1
 1236  00001d54  afc20000	sw	(r30),r2
 1237  00001d58  8fc10000	lw	r1,(r30)
 1238  00001d5c  90220000	lbu	r2,(r1)
 1239  00001d60  60410078	seqi	r1,r2,#120
 1240  00001d64  14200020	bnez	r1,L83_LF2
 1241  00001d68  54000000	nop; delay slot nop
 1242  00001d6c  8fc10000	lw	r1,(r30)
 1243  00001d70  90220000	lbu	r2,(r1)
 1244  00001d74  60410058	seqi	r1,r2,#88
 1245  00001d78  1420000c	bnez	r1,L83_LF2
 1246  00001d7c  54000000	nop; delay slot nop
 1247  00001d80  08000024	j	L82_LF2
 1248  00001d84  54000000	nop; delay slot nop
 1249  00001d88          	L83_LF2:
 1250  00001d88  20010010	addi	r1,r0,#16
 1251  00001d8c  afc10008	sw	8(r30),r1
 1252  00001d90  8fc20000	lw	r2,(r30)
 1253  00001d94  20410001	addi	r1,r2,#1
 1254  00001d98  00011020	add	r2,r0,r1
 1255  00001d9c  afc20000	sw	(r30),r2
 1256  00001da0  0800000c	j	L84_LF2
 1257  00001da4  54000000	nop; delay slot nop
 1258  00001da8          	L82_LF2:
 1259  00001da8  20010008	addi	r1,r0,#8
 1260  00001dac  afc10008	sw	8(r30),r1
 1261  00001db0          	L84_LF2:
 1262  00001db0  0800000c	j	L80_LF2
 1263  00001db4  54000000	nop; delay slot nop
 1264  00001db8          	L81_LF2:
 1265  00001db8  2001000a	addi	r1,r0,#10
 1266  00001dbc  afc10008	sw	8(r30),r1
 1267  00001dc0          	L85_LF2:
 1268  00001dc0          	L80_LF2:
 1269  00001dc0  8fc10008	lw	r1,8(r30)
 1270  00001dc4  70220000	slei	r2,r1,#0
 1271  00001dc8  1440001c	bnez	r2,L87_LF2
 1272  00001dcc  54000000	nop; delay slot nop
 1273  00001dd0  8fc10008	lw	r1,8(r30)
 1274  00001dd4  6c220010	sgti	r2,r1,#16
 1275  00001dd8  1440000c	bnez	r2,L87_LF2
 1276  00001ddc  54000000	nop; delay slot nop
 1277  00001de0  08000010	j	L86_LF2
 1278  00001de4  54000000	nop; delay slot nop
 1279  00001de8          	L87_LF2:
 1280  00001de8  8fc1fff4	lw	r1,-12(r30)
 1281  00001dec  08000188	j	L72_LF2
 1282  00001df0  54000000	nop; delay slot nop
 1283  00001df4          	L86_LF2:
 1284  00001df4  54000000	nop
 1285  00001df8          	L88_LF2:
 1286  00001df8  8fc10000	lw	r1,(r30)
 1287  00001dfc  90220000	lbu	r2,(r1)
 1288  00001e00  6c41002f	sgtui	r1,r2,#47
 1289  00001e04  10200030	beqz	r1,L91_LF2
 1290  00001e08  54000000	nop; delay slot nop
 1291  00001e0c  8fc10000	lw	r1,(r30)
 1292  00001e10  90220000	lbu	r2,(r1)
 1293  00001e14  70410039	sleui	r1,r2,#57
 1294  00001e18  1020001c	beqz	r1,L91_LF2
 1295  00001e1c  54000000	nop; delay slot nop
 1296  00001e20  8fc10000	lw	r1,(r30)
 1297  00001e24  90220000	lbu	r2,(r1)
 1298  00001e28  2041ffd0	addi	r1,r2,#-48
 1299  00001e2c  afc1fff0	sw	-16(r30),r1
 1300  00001e30  0800008c	j	L92_LF2
 1301  00001e34  54000000	nop; delay slot nop
 1302  00001e38          	L91_LF2:
 1303  00001e38  8fc10000	lw	r1,(r30)
 1304  00001e3c  90220000	lbu	r2,(r1)
 1305  00001e40  6c410060	sgtui	r1,r2,#96
 1306  00001e44  10200030	beqz	r1,L93_LF2
 1307  00001e48  54000000	nop; delay slot nop
 1308  00001e4c  8fc10000	lw	r1,(r30)
 1309  00001e50  90220000	lbu	r2,(r1)
 1310  00001e54  7041007a	sleui	r1,r2,#122
 1311  00001e58  1020001c	beqz	r1,L93_LF2
 1312  00001e5c  54000000	nop; delay slot nop
 1313  00001e60  8fc10000	lw	r1,(r30)
 1314  00001e64  90220000	lbu	r2,(r1)
 1315  00001e68  2041ffa9	addi	r1,r2,#-87
 1316  00001e6c  afc1fff0	sw	-16(r30),r1
 1317  00001e70  0800004c	j	L92_LF2
 1318  00001e74  54000000	nop; delay slot nop
 1319  00001e78          	L93_LF2:
 1320  00001e78  8fc10000	lw	r1,(r30)
 1321  00001e7c  90220000	lbu	r2,(r1)
 1322  00001e80  6c410040	sgtui	r1,r2,#64
 1323  00001e84  10200030	beqz	r1,L95_LF2
 1324  00001e88  54000000	nop; delay slot nop
 1325  00001e8c  8fc10000	lw	r1,(r30)
 1326  00001e90  90220000	lbu	r2,(r1)
 1327  00001e94  7041005a	sleui	r1,r2,#90
 1328  00001e98  1020001c	beqz	r1,L95_LF2
 1329  00001e9c  54000000	nop; delay slot nop
 1330  00001ea0  8fc10000	lw	r1,(r30)
 1331  00001ea4  90220000	lbu	r2,(r1)
 1332  00001ea8  2041ffc9	addi	r1,r2,#-55
 1333  00001eac  afc1fff0	sw	-16(r30),r1
 1334  00001eb0  0800000c	j	L92_LF2
 1335  00001eb4  54000000	nop; delay slot nop
 1336  00001eb8          	L95_LF2:
 1337  00001eb8  200103e8	addi	r1,r0,#1000
 1338  00001ebc  afc1fff0	sw	-16(r30),r1
 1339  00001ec0          	L96_LF2:
 1340  00001ec0          	L94_LF2:
 1341  00001ec0          	L92_LF2:
 1342  00001ec0  8fc1fff0	lw	r1,-16(r30)
 1343  00001ec4  8fc20008	lw	r2,8(r30)
 1344  00001ec8  0022082a	slt	r1,r1,r2
 1345  00001ecc  10200040	beqz	r1,L90_LF2
 1346  00001ed0  54000000	nop; delay slot nop
 1347  00001ed4  8fc1fff4	lw	r1,-12(r30)
 1348  00001ed8  8fc20008	lw	r2,8(r30)
 1349  00001edc  00200035	movi2fp	f0,r1
 1350  00001ee0  00400835	movi2fp	f1,r2
 1351  00001ee4  0401000e	mult	f0,f0,f1
 1352  00001ee8  00000834	movfp2i	r1,f0
 1353  00001eec  afc1fff4	sw	-12(r30),r1
 1354  00001ef0  8fc1fff4	lw	r1,-12(r30)
 1355  00001ef4  8fc2fff0	lw	r2,-16(r30)
 1356  00001ef8  00220820	add	r1,r1,r2
 1357  00001efc  afc1fff4	sw	-12(r30),r1
 1358  00001f00  8fc20000	lw	r2,(r30)
 1359  00001f04  20410001	addi	r1,r2,#1
 1360  00001f08  00011020	add	r2,r0,r1
 1361  00001f0c  afc20000	sw	(r30),r2
 1362  00001f10          	L97_LF2:
 1363  00001f10          	L90_LF2:
 1364  00001f10  8fc1fff0	lw	r1,-16(r30)
 1365  00001f14  8fc20008	lw	r2,8(r30)
 1366  00001f18  0022082a	slt	r1,r1,r2
 1367  00001f1c  1420000c	bnez	r1,L98_LF2
 1368  00001f20  54000000	nop; delay slot nop
 1369  00001f24  0800000c	j	L89_LF2
 1370  00001f28  54000000	nop; delay slot nop
 1371  00001f2c          	L98_LF2:
 1372  00001f2c  0bfffec8	j	L88_LF2
 1373  00001f30  54000000	nop; delay slot nop
 1374  00001f34          	L89_LF2:
 1375  00001f34  8fc10004	lw	r1,4(r30)
 1376  00001f38  64220000	snei	r2,r1,#0
 1377  00001f3c  10400010	beqz	r2,L99_LF2
 1378  00001f40  54000000	nop; delay slot nop
 1379  00001f44  8fc10004	lw	r1,4(r30)
 1380  00001f48  8fc20000	lw	r2,(r30)
 1381  00001f4c  ac220000	sw	(r1),r2
 1382  00001f50          	L99_LF2:
 1383  00001f50  8fc1fff4	lw	r1,-12(r30)
 1384  00001f54  8fc2ffec	lw	r2,-20(r30)
 1385  00001f58  00200035	movi2fp	f0,r1
 1386  00001f5c  00400835	movi2fp	f1,r2
 1387  00001f60  0401000e	mult	f0,f0,f1
 1388  00001f64  00000834	movfp2i	r1,f0
 1389  00001f68  afc1fff4	sw	-12(r30),r1
 1390  00001f6c  8fc1fff4	lw	r1,-12(r30)
 1391  00001f70  08000004	j	L72_LF2
 1392  00001f74  54000000	nop; delay slot nop
 1393  00001f78          	L72_LF2:
 1394  00001f78  8fa20000	lw	r2,0(r29)
 1395  00001f7c  8fdffff8	lw	r31,-8(r30)
 1396  00001f80  001ee820	add	r29,r0,r30
 1397  00001f84  8fdefffc	lw	r30,-4(r30)
 1398  00001f88  4be00000	jr	r31
 1399  00001f8c  54000000	nop
 1400  00001f90          	.endproc _dstrtol
 1401  00001f90          	.align 2
 1402  00001f90          	.proc _bcopy
 1403  00001f90          	.global _bcopy
 1404  00001f90          	_bcopy:
 1405                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1406  00001f90  afbefffc	sw	-4(r29),r30; push fp
 1407  00001f94  001df020	add	r30,r0,r29; fp = sp
 1408  00001f98  afbffff8	sw	-8(r29),r31; push ret addr
 1409  00001f9c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1410  00001fa0  afa20000	sw	0(r29),r2
 1411  00001fa4  afa30004	sw	4(r29),r3
 1412  00001fa8  54000000	nop
 1413  00001fac          	L101_LF2:
 1414  00001fac  8fc10008	lw	r1,8(r30)
 1415  00001fb0  2022ffff	addi	r2,r1,#-1
 1416  00001fb4  afc20008	sw	8(r30),r2
 1417  00001fb8  6c210000	sgti	r1,r1,#0
 1418  00001fbc  1420000c	bnez	r1,L103_LF2
 1419  00001fc0  54000000	nop; delay slot nop
 1420  00001fc4  0800002c	j	L102_LF2
 1421  00001fc8  54000000	nop; delay slot nop
 1422  00001fcc          	L103_LF2:
 1423  00001fcc  8fc10004	lw	r1,4(r30)
 1424  00001fd0  20220001	addi	r2,r1,#1
 1425  00001fd4  afc20004	sw	4(r30),r2
 1426  00001fd8  8fc20000	lw	r2,(r30)
 1427  00001fdc  20430001	addi	r3,r2,#1
 1428  00001fe0  afc30000	sw	(r30),r3
 1429  00001fe4  80420000	lb	r2,(r2)
 1430  00001fe8  a0220000	sb	(r1),r2
 1431  00001fec  0bffffbc	j	L101_LF2
 1432  00001ff0  54000000	nop; delay slot nop
 1433  00001ff4          	L102_LF2:
 1434  00001ff4          	L100_LF2:
 1435  00001ff4  8fa20000	lw	r2,0(r29)
 1436  00001ff8  8fa30004	lw	r3,4(r29)
 1437  00001ffc  8fdffff8	lw	r31,-8(r30)
 1438  00002000  001ee820	add	r29,r0,r30
 1439  00002004  8fdefffc	lw	r30,-4(r30)
 1440  00002008  4be00000	jr	r31
 1441  0000200c  54000000	nop
 1442  00002010          	.endproc _bcopy
 1443  00002010          	.align 2
 1444  00002010          	.proc _bzero
 1445  00002010          	.global _bzero
 1446  00002010          	_bzero:
 1447                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1448  00002010  afbefffc	sw	-4(r29),r30; push fp
 1449  00002014  001df020	add	r30,r0,r29; fp = sp
 1450  00002018  afbffff8	sw	-8(r29),r31; push ret addr
 1451  0000201c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1452  00002020  afa20000	sw	0(r29),r2
 1453  00002024  54000000	nop
 1454  00002028          	L105_LF2:
 1455  00002028  8fc10004	lw	r1,4(r30)
 1456  0000202c  2022ffff	addi	r2,r1,#-1
 1457  00002030  afc20004	sw	4(r30),r2
 1458  00002034  6c210000	sgti	r1,r1,#0
 1459  00002038  1420000c	bnez	r1,L107_LF2
 1460  0000203c  54000000	nop; delay slot nop
 1461  00002040  08000020	j	L106_LF2
 1462  00002044  54000000	nop; delay slot nop
 1463  00002048          	L107_LF2:
 1464  00002048  8fc10000	lw	r1,(r30)
 1465  0000204c  20220001	addi	r2,r1,#1
 1466  00002050  afc20000	sw	(r30),r2
 1467  00002054  20020000	addi	r2,r0,(#0x0)&0xff
 1468  00002058  a0220000	sb	(r1),r2
 1469  0000205c  0bffffc8	j	L105_LF2
 1470  00002060  54000000	nop; delay slot nop
 1471  00002064          	L106_LF2:
 1472  00002064          	L104_LF2:
 1473  00002064  8fa20000	lw	r2,0(r29)
 1474  00002068  8fdffff8	lw	r31,-8(r30)
 1475  0000206c  001ee820	add	r29,r0,r30
 1476  00002070  8fdefffc	lw	r30,-4(r30)
 1477  00002074  4be00000	jr	r31
 1478  00002078  54000000	nop
 1479  0000207c          	.endproc _bzero
 1480  0000207c          	.align 2
 1481  0000207c          	.proc _min
 1482  0000207c          	.global _min
 1483  0000207c          	_min:
 1484                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1485  0000207c  afbefffc	sw	-4(r29),r30; push fp
 1486  00002080  001df020	add	r30,r0,r29; fp = sp
 1487  00002084  afbffff8	sw	-8(r29),r31; push ret addr
 1488  00002088  2fbd0010	subui	r29,r29,#16; alloc local storage
 1489  0000208c  afa20000	sw	0(r29),r2
 1490  00002090  afa30004	sw	4(r29),r3
 1491  00002094  8fc10000	lw	r1,(r30)
 1492  00002098  8fc20004	lw	r2,4(r30)
 1493  0000209c  0022182c	sle	r3,r1,r2
 1494  000020a0  14600008	bnez	r3,L109_LF2
 1495  000020a4  54000000	nop; delay slot nop
 1496  000020a8  8fc10004	lw	r1,4(r30)
 1497  000020ac          	L109_LF2:
 1498  000020ac  08000004	j	L108_LF2
 1499  000020b0  54000000	nop; delay slot nop
 1500  000020b4          	L108_LF2:
 1501  000020b4  8fa20000	lw	r2,0(r29)
 1502  000020b8  8fa30004	lw	r3,4(r29)
 1503  000020bc  8fdffff8	lw	r31,-8(r30)
 1504  000020c0  001ee820	add	r29,r0,r30
 1505  000020c4  8fdefffc	lw	r30,-4(r30)
 1506  000020c8  4be00000	jr	r31
 1507  000020cc  54000000	nop
 1508  000020d0          	.endproc _min
 1509  000020d0          	.align 2
 1510  000020d0          	.proc _max
 1511  000020d0          	.global _max
 1512  000020d0          	_max:
 1513                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1514  000020d0  afbefffc	sw	-4(r29),r30; push fp
 1515  000020d4  001df020	add	r30,r0,r29; fp = sp
 1516  000020d8  afbffff8	sw	-8(r29),r31; push ret addr
 1517  000020dc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1518  000020e0  afa20000	sw	0(r29),r2
 1519  000020e4  afa30004	sw	4(r29),r3
 1520  000020e8  8fc10000	lw	r1,(r30)
 1521  000020ec  8fc20004	lw	r2,4(r30)
 1522  000020f0  0022182d	sge	r3,r1,r2
 1523  000020f4  14600008	bnez	r3,L111_LF2
 1524  000020f8  54000000	nop; delay slot nop
 1525  000020fc  8fc10004	lw	r1,4(r30)
 1526  00002100          	L111_LF2:
 1527  00002100  08000004	j	L110_LF2
 1528  00002104  54000000	nop; delay slot nop
 1529  00002108          	L110_LF2:
 1530  00002108  8fa20000	lw	r2,0(r29)
 1531  0000210c  8fa30004	lw	r3,4(r29)
 1532  00002110  8fdffff8	lw	r31,-8(r30)
 1533  00002114  001ee820	add	r29,r0,r30
 1534  00002118  8fdefffc	lw	r30,-4(r30)
 1535  0000211c  4be00000	jr	r31
 1536  00002120  54000000	nop
 1537  00002124          	.endproc _max
 1538                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1539                      ;;;
 1540                      ;;; Most of the traps are called in files from libtraps.
 1543  00002124          	.align 2
 1544  00002124          	.proc _exit
 1545  00002124          	.global _exit
 1546  00002124          	_exit:
 1547  00002124  44000300	trap	#0x300
 1548  00002128  4be00000	jr	r31
 1549  0000212c  54000000	nop
 1550  00002130          	.endproc _exit
 1552                      ; for the benefit of gcc.
 1553  00002130          	.proc ___main
 1554  00002130          	.global ___main
 1555  00002130          	___main:
 1556  00002130  4be00000	jr	r31
 1557  00002134  54000000	nop
 1558  00002138          	.endproc ___main
 1559  00002138          	.text
 1560  00002138          	.global _etext
 1561  00002138          	_etext:
 1562  00002138          	.align 3
 1563  00002138          	.data
 1564  00003133          	.global _edata
 1565  00003133          	_edata:
